{"version":3,"sources":["webpack://micro-lib/./src/adapters/http-adapter.js","webpack://micro-lib/./src/adapters/persistence-adapter.js","webpack://micro-lib/./src/controllers/delete-model.js","webpack://micro-lib/./src/controllers/get-config.js","webpack://micro-lib/./src/controllers/get-model-by-id.js","webpack://micro-lib/./src/controllers/get-models.js","webpack://micro-lib/./src/controllers/index.js","webpack://micro-lib/./src/controllers/patch-model.js","webpack://micro-lib/./src/controllers/post-model.js","webpack://micro-lib/./src/datasources/adapters/datasource-file.js","webpack://micro-lib/./src/datasources/adapters/datasource-memory.js","webpack://micro-lib/./src/datasources/adapters/datasource-mongodb.js","webpack://micro-lib/./src/datasources/adapters/index.js","webpack://micro-lib/./src/datasources/datasource.js","webpack://micro-lib/./src/datasources/index.js","webpack://micro-lib/./src/datasources/transaction.js","webpack://micro-lib/./src/lib/check-acl.js","webpack://micro-lib/./src/lib/hash.js","webpack://micro-lib/./src/lib/serializer.js","webpack://micro-lib/./src/models/observer.js","webpack://micro-lib/./src/server.js","webpack://micro-lib/./src/services/event-bus.js","webpack://micro-lib/./src/services/persistence-service.js","webpack://micro-lib/./src/services/publish-event.js","webpack://micro-lib/./src/use-cases/add-model.js","webpack://micro-lib/./src/use-cases/edit-model.js","webpack://micro-lib/./src/use-cases/execute-command.js","webpack://micro-lib/./src/use-cases/fetch-related-models.js","webpack://micro-lib/./src/use-cases/find-model.js","webpack://micro-lib/./src/use-cases/handle-events.js","webpack://micro-lib/./src/use-cases/index.js","webpack://micro-lib/./src/use-cases/invoke-port.js","webpack://micro-lib/./src/use-cases/list-configs.js","webpack://micro-lib/./src/use-cases/list-models.js","webpack://micro-lib/./src/use-cases/load-models.js","webpack://micro-lib/./src/use-cases/remove-model.js","webpack://micro-lib/./src/use-cases/resume-workflow.js","webpack://micro-lib/./node_modules/mongodb/lib/core/connection|sync","webpack://micro-lib/./node_modules/mongodb/lib/core|sync"],"names":["buildCallback","controller","req","res","httpRequest","body","query","params","method","path","log","func","console","info","then","httpResponse","headers","set","type","status","statusCode","send","e","error","save","service","model","async","result","ok","data","Error","remove","find","update","args","changes","close","deleteModelFactory","removeModel","hash","deleteModel","name","id","Date","toUTCString","ETag","JSON","stringify","modelId","getId","message","getConfigFactory","listConfigs","getConfig","configs","getModelByIdFactory","findModel","getModelById","getModelsFactory","listModels","getModels","models","make","useCases","controllerFactory","map","uc","endpoint","fn","postModels","addModels","postModelFactory","patchModels","editModels","patchModelFactory","getModelsById","findModels","deleteModels","removeModels","initCache","label","loadModels","load","time","Promise","all","m","timeEnd","registerCacheEvents","editModel","patchModel","command","payload","addModel","postModel","debug","output","directoryName","process","env","DATASOURCE_FILE_DIRECTORY","__dirname","directoryPath","DataSourceFile","dataSource","factory","hydrate","serializer","file","concat","readFile","key","value","serialize","deserialize","dataStr","replace","fs","Map","parse","revive","writeFile","ds","DataSourceMemory","cmd","pid","get","listSync","values","keys","Object","includes","count","splice","length","filter","v","every","k","DataSource","MongoClient","require","url","MONGODB_URL","cacheSize","Number","CACHE_SIZE","DataSourceMongoDb","datasource","connectDb","setCollection","client","connect","useNewUrlParser","useUnifiedTopology","isConnected","collection","db","cursor","limit","forEach","flush","findOne","_id","checkConnection","cached","findDb","clone","replaceOne","upsert","allSettled","saveDb","toArray","deleteOne","reduce","resolve","roughSizeOfObject","objects","bytes","object","objectList","stack","pop","indexOf","push","i","options","size","adapter","DATASOURCE_ADAPTER","DefaultDataSource","adapters","getBaseClass","DataSourceFactory","dataSources","getSpecDataSource","spec","ModelFactory","adapterFactory","BaseClass","baseClass","getDataSource","cacheOnly","has","newDs","executeTransaction","updates","transx","Transaction","tx","commit","freeze","modified","vote","old","rollback","checkAcl","requirement","allow","deny","makeArray","some","r","crypto","digest","replaceMap","on","replaceFunction","toString","reviveFunction","eval","serializers","checkTypes","s","RexExp","RegExp","checkRequiredProps","requiredProps","missing","validateSerializer","newSerializers","Array","isArray","enabled","n","keyApplies","test","string","typeApplies","applies","findDeserializer","findSerializer","Serializer","addSerializer","deserializer","handleError","__filename","Observer","eventHandlers","handlers","eventName","handler","allowMultiple","eventData","ObserverImpl","f","ObserverFactory","instance","createInstance","getInstance","apiRoot","API_ROOT","modelPath","idRoute","route","split","join","cmdRoute","RouteMap","warn","idInstance","match","cmdInstance","isServerless","title","SERVERLESS","Server","routes","serverless","serverMode","endpointId","endpointCmd","remoteEntry","__non_webpack_require__","getRemoteModules","microlib","Module","initRemotes","getRemoteEntries","makeAdmin","app","webserver","controllers","ctlr","http","control","shutdown","shutdownTasks","clear","cache","start","router","overrides","Persistence","remotes","EventBus","listen","notify","getName","event","observer","publishEvent","makeAddModel","modelName","repository","eventType","EventTypes","CREATE","getEventName","domainEvents","input","createModel","createEvent","makeEditModel","UPDATE","editModelHandler","updated","updateModel","executeCommand","invokePort","commandType","commandAuthorized","permission","commands","acl","getSpec","emit","fetchRelatedModels","relation","relations","makeFindModel","related","BROADCAST","TOPIC_BROADCAST","DELETE","updateCache","startsWith","initRemoteCache","cacheEventHandler","unregistered","u","topic","getTime","callback","once","filters","toUpperCase","handleEvents","DISTRIBUTED_CACHE_ENABLED","clusterSave","clusterDelete","buildOptions","makeListModels","makeRemoveModel","makeLoadModels","makeListConfig","portAuthorized","port","ports","listConfigsFactory","getRemoteModels","DateFunctions","today","list","createTime","getDate","yesterday","thisMonth","getMonth","lastMonth","parseQuery","dateFunc","searchTerms","filteredList","getCacheSize","getCacheSizeBytes","total","hydrateModels","loadModel","saved","getOwnPropertyNames","handleRestart","resumeWorkflow","getModelSpec","setTimeout","removeModelFactory","deleted","obsResult","repoResult","reason","history","getPortFlow","compensate","lastPort","nextPort","producesEvent"],"mappings":"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","file":"src_server_js-node_modules_mongodb_lib_core_connection_sync_recursive-node_modules_mongodb_li-deeaa8.js","sourcesContent":["\"use strict\";\n/**\n * @callback httpController\n * @param {{\n *  body:{key1,keyN},\n *  query:{key1},\n *  params:{key1,keyN},\n *  log:(functionName)=>void\n * }} httpRequest\n * @returns {{\n *  body:{key1,keyN},\n *  headers:{key1,keyN}\n * }}\n */\n\n/**\n * @param {httpController} controller\n */\nexport default function buildCallback(controller) {\n  return async (req, res) => {\n    const httpRequest = {\n      body: req.body,\n      query: req.query,\n      params: req.params,\n      //ip: req.ip,\n      method: req.method,\n      path: req.path,\n      // headers: {\n      //   \"Content-Type\": req.get(\"Content-Type\"),\n      //   Referer: req.get(\"referer\"),\n      //   \"User-Agent\": req.get(\"User-Agent\"),\n      // },\n\n      log(func) {\n        //const { source = {}, ...payload } = httpRequest.body;\n        //source.ip = httpRequest.ip;\n        //source.browser = httpRequest.headers[\"User-Agent\"];\n\n        // if (httpRequest.headers[\"Referer\"]) {\n        //   source.referrer = httpRequest.headers[\"Referer\"];\n        // }\n\n        console.info({\n          function: func,\n          method: httpRequest.method,\n          params: httpRequest.params,\n          query: httpRequest.query,\n          //source,\n          ...httpRequest.body,\n        });\n      },\n    };\n\n    return controller(httpRequest)\n      .then(httpResponse => {\n        if (httpResponse.headers) {\n          res.set(httpResponse.headers);\n        }\n        res.type(\"json\");\n        res.status(httpResponse.statusCode).send(httpResponse.body);\n        return httpResponse;\n      })\n      .catch(e => res.status(500).send({ error: \"An unkown error occurred.\" }));\n  };\n}\n","\"use strict\";\n\nimport async from \"../lib/async-error\";\n\nexport function save(service) {\n  return async function ({ model }) {\n    const result = await async(service.save(model));\n    if (result.ok) {\n      return result.data;\n    }\n    throw new Error(result.error);\n  };\n}\n\nexport function remove(service) {\n  return async function ({ model }) {\n    const result = await async(service.delete(model));\n    if (result.ok) {\n      return result.data;\n    }\n    throw new Error(result.error);\n  };\n}\n\nexport function find(service) {\n  return async function ({ model }) {\n    const result = await async(service.find(model));\n    if (result.ok) {\n      return result.data;\n    }\n    throw new Error(result.error);\n  };\n}\n\nexport function update(service) {\n  return async function ({ model, args: [changes] }) {\n    const result = await async(service.update(model, changes));\n    if (result.ok) {\n      return result.data;\n    }\n    throw new Error(result.error);\n  };\n}\n\nexport function close(service) {\n  return function () {\n    try {\n      service.close();\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  };\n}\n","/**\n *\n * @param {import(\"../use-cases/remove-model\").removeModel} removeModel\n * @returns {import(\"../adapters/http-adapter\").httpController}\n */\nexport default function deleteModelFactory(removeModel, hash) {\n  return async function deleteModel(httpRequest) {\n    try {\n      httpRequest.log(deleteModel.name);\n\n      const model = await removeModel(httpRequest.params.id);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Last-Modified\": new Date().toUTCString(),\n          ETag: hash(JSON.stringify(model)),\n        },\n        statusCode: 201,\n        body: { modelId: model.getId() },\n      };\n    } catch (e) {\n      console.error(e);\n\n      if (e.message === \"no such id\") {\n        return {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          statusCode: 404,\n        };\n      }\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","\"use strict\";\n\nexport default function getConfigFactory(listConfigs) {\n  return async function getConfig(httpRequest) {\n    try {\n      httpRequest.log(getConfig.name);\n\n      const configs = await listConfigs();\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 200,\n        body: configs,\n      };\n    } catch (e) {\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","/**\n * @param {import(\"../use-cases/find-model\").findModel} findModel\n * @returns {import(\"../adapters/http-adapter\").httpController}\n */\nexport default function getModelByIdFactory(findModel) {\n  return async function getModelById(httpRequest) {\n    try {\n      httpRequest.log(getModelById.name);\n\n      const id = httpRequest.params.id;\n      const query = httpRequest.query;\n\n      const model = await findModel(id, query);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 200,\n        body: model,\n      };\n    } catch (e) {\n      console.error(e.message);\n\n      if (e.message === \"no such id\") {\n        return {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          statusCode: 404,\n        };\n      }\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","/**\n *\n * @param {import(\"../use-cases/list-models\").listModels} listModels\n * @returns {import(\"../adapters/http-adapter\").httpController}\n */\nexport default function getModelsFactory(listModels) {\n  return async function getModels(httpRequest) {\n    try {\n      httpRequest.log(getModels.name);\n\n      const models = await listModels(httpRequest.query);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 200,\n        body: models,\n      };\n    } catch (e) {\n      console.error(e);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","\"use strict\";\n\nimport {\n  addModels,\n  editModels,\n  listModels,\n  findModels,\n  removeModels,\n  loadModels,\n  listConfigs,\n  registerCacheEvents,\n} from \"../use-cases\";\n\nimport postModelFactory from \"./post-model\";\nimport patchModelFactory from \"./patch-model\";\nimport getModelsFactory from \"./get-models\";\nimport getModelByIdFactory from \"./get-model-by-id\";\nimport deleteModelFactory from \"./delete-model\";\nimport getConfigFactory from \"./get-config\";\nimport hash from \"../lib/hash\";\n\nfunction make(useCases, controllerFactory) {\n  return useCases().map(uc => ({\n    endpoint: uc.endpoint,\n    fn: controllerFactory(uc.fn, hash),\n  }));\n}\n\nexport const postModels = () => make(addModels, postModelFactory);\nexport const patchModels = () => make(editModels, patchModelFactory);\nexport const getModels = () => make(listModels, getModelsFactory);\nexport const getModelsById = () => make(findModels, getModelByIdFactory);\nexport const deleteModels = () => make(removeModels, deleteModelFactory);\nexport const getConfig = () => getConfigFactory(listConfigs());\n\nexport const initCache = () => {\n  const label = \"\\ntime to load cache\";\n  const models = loadModels();\n\n  async function load() {\n    console.time(label);\n    await Promise.all(models.map(async m => m.fn()));\n    console.timeEnd(label);\n    registerCacheEvents();\n  }\n  return {\n    load,\n  };\n};\n","/**\n *\n * @param {import(\"../use-cases/edit-model\").editModel} editModel\n * @returns {import(\"../adapters/http-adapter\").httpController}\n */\nexport default function patchModelFactory(editModel, hash) {\n  return async function patchModel(httpRequest) {\n    try {\n      httpRequest.log(patchModel.name);\n\n      const id = httpRequest.params.id;\n      const command = httpRequest.params.command;\n      const payload = httpRequest.body;\n\n      const model = await editModel(id, payload, command);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Last-Modified\": new Date().toUTCString(),\n          ETag: hash(JSON.stringify(model)),\n        },\n        statusCode: 201,\n        body: { modelId: model.getId() },\n      };\n    } catch (e) {\n      console.error(e);\n\n      if (e.message === \"no such id\") {\n        return {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          statusCode: 404,\n        };\n      }\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","\"use strict\";\n\n/**\n *\n * @param {import(\"../use-cases/add-model\").addModel} addModel\n * @param {function():string} hash\n * @returns {import(\"../adapters/http-adapter\").httpController}\n */\nexport default function postModelFactory(addModel, hash) {\n  return async function postModel(httpRequest) {\n    try {\n      httpRequest.log(postModel.name);\n\n      const model = await addModel(httpRequest.body);\n\n      console.debug({ function: addModel.name, output: model });\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Last-Modified\": new Date().toUTCString(),\n          ETag: hash(JSON.stringify(model)),\n        },\n        statusCode: 201,\n        body: { modelId: model.getId() },\n      };\n    } catch (e) {\n      console.error(e);\n\n      return {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        statusCode: 400,\n        body: {\n          error: e.message,\n        },\n      };\n    }\n  };\n}\n","import fs from \"fs\";\nimport path from \"path\";\nimport { DataSourceMemory } from \"./datasource-memory\";\n\nconst directoryName = process.env.DATASOURCE_FILE_DIRECTORY || __dirname;\nconst directoryPath = path.resolve(__dirname, directoryName) || __dirname;\n\n/**\n * Persistent storage on filesystem\n */\nexport class DataSourceFile extends DataSourceMemory {\n  /**\n   * @param {Set} dataSource\n   */\n  constructor(dataSource, factory, name) {\n    super(dataSource, factory, name);\n  }\n\n  /**\n   *\n   * @param {{\n   *  hydrate:function(Map<string,import(\"../../models/model\").Model>),\n   *  serializer:import(\"../../lib/serializer\").Serializer,\n   * }} param0\n   */\n  async load({ hydrate, serializer }) {\n    this.file = path.join(directoryPath, this.name.concat(\".json\"));\n    this.serializer = serializer;\n    this.dataSource = this.readFile(hydrate);\n  }\n\n  replace(key, value) {\n    if (value && this.serializer) {\n      return this.serializer.serialize(key, value);\n    }\n    return value;\n  }\n\n  revive(key, value) {\n    if (value && this.serializer) {\n      return this.serializer.deserialize(key, value);\n    }\n    return value;\n  }\n\n  writeFile() {\n    const dataStr = JSON.stringify([...this.dataSource], this.replace);\n    fs.writeFileSync(this.file, dataStr);\n  }\n\n  /**\n   *\n   */\n  readFile(hydrate) {\n    if (fs.existsSync(this.file)) {\n      const models = fs.readFileSync(this.file, \"utf-8\");\n      if (models) {\n        return hydrate(new Map(JSON.parse(models, this.revive)));\n      }\n    }\n    return new Map();\n  }\n\n  /**\n   * @override\n   * @param {*} id\n   */\n  async delete(id) {\n    await super.delete(id);\n    this.writeFile();\n  }\n\n  /**\n   * @overrides\n   * @param {*} id\n   * @param {*} data\n   */\n  async save(id, data) {\n    const ds = await super.save(id, data);\n    this.writeFile();\n    return ds;\n  }\n\n  close() {\n    this.writeFile();\n  }\n}\n","\"use strict\";\n\nimport DataSource from \"../datasource\";\n\n/**\n * Temporary in-memory storage.\n */\nexport class DataSourceMemory extends DataSource {\n  constructor(dataSource, factory, name) {\n    super(dataSource, factory, name);\n  }\n\n  /**\n   * Update cache and datasource. Sync cache of other\n   * cluster members if running in cluster mode.\n   * @override\n   */\n  async save(id, data) {\n    if (process.send === \"function\") {\n      /** send data to cluster members */\n      process.send({\n        cmd: \"saveBroadcast\",\n        pid: process.pid,\n        name: this.name,\n        data,\n        id,\n      });\n    }\n    return this.dataSource.set(id, data).get(id);\n  }\n\n  async clusterSave(id, data) {\n    return this.dataSource.set(id, data).get(id);\n  }\n\n  /**\n   * @override\n   */\n  async find(id) {\n    return this.dataSource.get(id);\n  }\n\n  /**\n   * @override\n   */\n  async list(query) {\n    return this.listSync(query);\n  }\n\n  /**\n   * Return filtered or unfiltered list of model instances in cache.\n   * @override\n   * @param {{key1,keyN}} query\n   * @returns\n   */\n  listSync(query) {\n    const values = [...this.dataSource.values()];\n\n    if (query) {\n      const keys = Object.keys(query);\n\n      if (keys.includes(\"count\") && typeof keys.count === \"number\") {\n        return values.splice(0, keys.count);\n      }\n      if (keys.length > 0) {\n        return values.filter(v =>\n          keys.every(k => (v[k] ? query[k] === v[k] : false))\n        );\n      }\n    }\n    return values;\n  }\n\n  /**\n   * @override\n   */\n  async delete(id) {\n    if (process.send === \"function\") {\n      process.send({\n        cmd: \"deleteBroadcast\",\n        pid: process.pid,\n        name: this.name,\n        id,\n      });\n    }\n    this.dataSource.delete(id);\n  }\n\n  async clusterDelete(id) {\n    this.dataSource.delete(id);\n  }\n}\n","\"use strict\";\n\nconst MongoClient = require(\"mongodb\").MongoClient;\nconst DataSourceMemory = require(\"./datasource-memory\").DataSourceMemory;\n\nconst url = process.env.MONGODB_URL || \"mongodb://localhost:27017\";\nconst cacheSize = Number(process.env.CACHE_SIZE) || 300;\n\n/**\n * MongoDB adapter extends in-memory datasource to support caching.\n * The cache is always updated first, which allows the system to run\n * even when the database is offline.\n */\nexport class DataSourceMongoDb extends DataSourceMemory {\n  constructor(datasource, factory, name) {\n    super(datasource, factory, name);\n    this.url = url;\n    this.cacheSize = cacheSize;\n  }\n\n  /**\n   * @override\n   * @param {{\n   *  hydrate:function(Map<string,import(\"../../models\").Model>),\n   *  serializer:import(\"../../lib/serializer\").Serializer\n   * }} options\n   */\n  load({ hydrate, serializer }) {\n    this.hydrate = hydrate;\n    this.serializer = serializer;\n\n    this.connectDb()\n      .then(() => this.setCollection())\n      .then(() => this.loadModels())\n      .catch(e => console.error(e));\n  }\n\n  async connectDb() {\n    if (!this.client) {\n      this.client = await MongoClient.connect(this.url, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      });\n\n      if (!this.client || !this.client.isConnected) {\n        console.error(\"can't connect to db - using memory\", error);\n      }\n    }\n  }\n\n  setCollection() {\n    try {\n      this.collection = this.client.db(this.name).collection(this.name);\n    } catch (error) {\n      console.error(\"error setting collection\", error);\n    }\n  }\n\n  async loadModels() {\n    try {\n      const cursor = this.collection.find().limit(this.cacheSize);\n      cursor.forEach(\n        async model => await super.save(model.id, this.hydrate(model))\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async checkConnection(error) {\n    try {\n      console.error(\"check connection on error\", error);\n      if (!this.client || !this.client.isConnected) {\n        await this.connectDb();\n        this.setCollection();\n        return this.flush();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async findDb(id) {\n    const model = await this.collection.findOne({ _id: id });\n    if (!model) {\n      await this.checkConnection(\"document not found\");\n      return model;\n    }\n    return super.save(id, this.hydrate(model));\n  }\n\n  /**\n   * Check the cache first.\n   * @overrid\n   * @param {*} id - `Model.id`\n   */\n  async find(id) {\n    try {\n      const cached = await super.find(id);\n      if (!cached) {\n        return this.findDb(id);\n      }\n      return cached;\n    } catch (error) {\n      await this.checkConnection(error);\n    }\n  }\n\n  serialize(data) {\n    if (this.serializer) {\n      return JSON.stringify(data, this.serializer.serialize);\n    }\n    return JSON.stringify(data);\n  }\n\n  async saveDb(id, data) {\n    const clone = JSON.parse(this.serialize(data));\n    await this.collection.replaceOne(\n      { _id: id },\n      { ...clone, _id: id },\n      { upsert: true }\n    );\n    return data;\n  }\n\n  /**\n   * Save to the cache first, then the db.\n   * Wait for both functions to complete. We\n   * keep running even if the db is offline.\n   *\n   * @override\n   * @param {*} id\n   * @param {*} data\n   */\n  async save(id, data) {\n    try {\n      await Promise.allSettled([super.save(id, data), this.saveDb(id, data)]);\n      return data;\n    } catch (error) {\n      await this.checkConnection(error);\n    }\n  }\n\n  /**\n   * @override\n   * @param {{key1:string, keyN:string}} filter - e.g. http query\n   * @param {boolean} cached - use the cache if true, otherwise go to db.\n   */\n  async list(filter = null, cached = true) {\n    try {\n      if (cached) {\n        //console.log(\"cache size\", this.dataSource.size);\n        return super.list(filter);\n      }\n      return await this.collection.find().toArray();\n    } catch (error) {\n      await this.checkConnection(error);\n    }\n  }\n\n  /**\n   * Delete from db, then cache.\n   * If db fails, keep it cached.\n   *\n   * @override\n   * @param {*} id\n   */\n  async delete(id) {\n    try {\n      await Promise.all([\n        this.collection.deleteOne({ _id: id }),\n        super.delete(id),\n      ]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Flush the cache to disk.\n   */\n  flush() {\n    try {\n      [...this.dataSource.values()].reduce(\n        (data, model) => data.then(this.saveDb(model.getId())),\n        Promise.resolve()\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Process terminating, flush cache, close connections.\n   * @override\n   */\n  close() {\n    this.flush();\n    this.client.close();\n  }\n}\n","export * from \"./datasource-memory\";\nexport * from \"./datasource-file\";\nexport * from \"./datasource-mongodb\";","\"use strict\";\n\nfunction roughSizeOfObject(...objects) {\n  let bytes = 0;\n\n  objects.forEach(object => {\n    const objectList = [];\n    const stack = [object];\n    console.log(objects);\n    console.log(stack.length);\n    while (stack.length) {\n      var value = stack.pop();\n\n      if (typeof value === \"boolean\") {\n        bytes += 4;\n      } else if (typeof value === \"string\") {\n        bytes += value.length * 2;\n      } else if (typeof value === \"number\") {\n        bytes += 8;\n      } else if (\n        typeof value === \"object\" &&\n        objectList.indexOf(value) === -1\n      ) {\n        objectList.push(value);\n\n        for (var i in value) {\n          stack.push(value[i]);\n        }\n      }\n    }\n  });\n\n  return bytes;\n}\n\n/**\n * Abstract datasource class\n */\nexport default class DataSource {\n  constructor(dataSource, factory, name) {\n    this.dataSource = dataSource;\n    this.factory = factory;\n    this.name = name;\n  }\n  /**\n   * Upsert model instance\n   * @param {*} id\n   * @param {*} data\n   */\n  async save(id, data) {\n    throw new Error(\"abstract method not implemented\");\n  }\n\n  async clusterSave(id, data) {}\n\n  /**\n   * Find model instance by ID\n   * @param {*} id record id\n   * @returns {Promise<any>} record\n   */\n  async find(id) {\n    throw new Error(\"abstract method not implemented\");\n  }\n\n  /**\n   * list model instances\n   * @param {boolean} [cached] - list cached items, default is true\n   * @returns {Promise<any[]>}\n   */\n  async list(query = null, cached = true) {\n    throw new Error(\"abstract method not implemented\");\n  }\n\n  listSync(query) {}\n\n  async delete(id) {\n    throw new Error(\"abstract method not implemented\");\n  }\n\n  async clusterDelete(id) {}\n  /**\n   *\n   * @param {*} options\n   */\n  async load(options) {}\n\n  getFactory() {\n    return this.factory;\n  }\n\n  /**\n   *\n   */\n  getCacheSize() {\n    return this.dataSource.size;\n  }\n\n  getCacheSizeBytes() {\n    return this.dataSource.size * roughSizeOfObject([...this.dataSource][0][1]);\n  }\n\n  /**\n   *\n   */\n  close() {}\n}\n","\"use strict\";\n\n/**\n * @typedef {import('../models').Model} Model\n */\nimport { Transaction } from \"./transaction\";\nimport ModelFactory from \"../models\";\nimport * as adapters from \"./adapters\";\n\nconst adapter = process.env.DATASOURCE_ADAPTER || \"DataSourceMemory\";\nconst DefaultDataSource = adapters[adapter];\n\nfunction getBaseClass(name) {\n  if (name === \"DataSourceFile\") {\n    return require(\"./adapters\").DataSourceFile;\n  }\n  if (name === \"DataSourceMongoDb\") {\n    return require(\"./adapters\").DataSourceMongoDb;\n  }\n  return require(\"./adapters\").DataSourceMemory;\n}\n\n/**\n * @todo handle all state same way\n */\nconst DataSourceFactory = (() => {\n  // References all DSes\n  let dataSources;\n\n  /**\n   * Get datasource from model spec or return default for server.\n   * @param {*} ds\n   * @param {*} factory this factory\n   * @param {*} name datasource name\n   * @returns\n   */\n  function getSpecDataSource(ds, factory, name) {\n    const spec = ModelFactory.getModelSpec(name);\n\n    if (spec?.datasource) {\n      const url = spec.datasource.url;\n      const cacheSize = spec.datasource.cacheSize;\n      const adapterFactory = spec.datasource.factory;\n      const BaseClass = getBaseClass(spec.datasource.baseClass);\n\n      try {\n        const DataSource = adapterFactory(url, cacheSize, BaseClass);\n        return new DataSource(ds, factory, name);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    // use default datasource\n    return new DefaultDataSource(ds, factory, name);\n  }\n\n  /**\n   * Get the datasource for each model.\n   * @param {string} name - model name\n   * @param {boolean} cacheOnly - if true returns memory adapter, default is false\n   */\n  function getDataSource(name, cacheOnly = false) {\n    if (!dataSources) {\n      dataSources = new Map();\n    }\n\n    if (dataSources.has(name)) {\n      return dataSources.get(name);\n    }\n\n    if (cacheOnly) {\n      const BaseClass = getBaseClass(\"DataSourceMemory\");\n      const newDs = new BaseClass(new Map(), this, name);\n      dataSources.set(name, newDs);\n      return newDs;\n    }\n\n    const newDs = getSpecDataSource(new Map(), this, name);\n    dataSources.set(name, newDs);\n    return newDs;\n  }\n\n  function close() {\n    dataSources.forEach(ds => ds.close());\n  }\n\n  /**\n   * Manage transaction across models and datasources\n   * @param {import(\"../models/index\").ports} ports\n   */\n  async function executeTransaction(models, updates) {\n    const transx = Transaction(models, updates);\n    transx\n      .update()\n      .then(tx => tx.commit())\n      .catch(e => console.log(e));\n  }\n\n  return Object.freeze({\n    /**\n     * Get `DataSource` singleton\n     * @returns {import('./datasource').default} DataSource singleton\n     */\n    getDataSource,\n    executeTransaction,\n    close,\n  });\n})();\n\nexport default DataSourceFactory;\n","/**\n * @todo implement federated transaction (2-phase)\n * to cut down on eventual consistency\n * @param {import(\"../models\").Model[]} models\n * @param {{model1:*,model2:*}} updates\n * @returns\n */\nexport const Transaction = function (models, updates) {\n  return {\n    modified: null,\n\n    async vote() {\n      this.modified = await Promise.all(\n        models.map(async m => ({ new: await m.vote(updates[m]), old: m }))\n      );\n      return this;\n    },\n\n    rollback() {\n      this.modified.map(m => m.old.commit());\n    },\n\n    async commit() {\n      try {\n        await Promise.all(this.modified.map(m => m.new.then(m => m.commit())));\n        console.log(\"transaction complete\");\n      } catch (error) {\n        this.rollback();\n        throw new Error(\"transaction rolled back\");\n      }\n    },\n  };\n};\n","\"use strict\";\n\nimport makeArray from \"../lib/make-array\";\n\nexport default function checkAcl(requirement, allow, deny = []) {\n  console.log({ func: checkAcl.name, requirement, allow });\n\n  return (\n    makeArray(requirement).some((r) => makeArray(allow).includes(r)) &&\n    makeArray(requirement).every((r) => !makeArray(deny).includes(r))\n  );\n}\n","import crypto from 'crypto';\n\nexport default function hash(data) {\n  return crypto.createHash('sha1').update(data).digest('hex');\n}","\"use strict\";\n\n/**\n * @typedef {import('../models/index').serializer} serializerType\n */\n\n/**\n * @type {serializerType}\n */\nexport const replaceMap = {\n  on: \"serialize\",\n  key: \"*\",\n  type: (key, value) => value instanceof Map,\n  value: (key, value) => [...value],\n};\n\n/**\n * @type {serializerType}\n */\nexport const replaceFunction = {\n  on: \"serialize\",\n  key: \"*\",\n  type: \"function\",\n  value: (key, value) => value.toString(),\n};\n\n/**\n * @type {serializerType}\n */\nexport const reviveFunction = {\n  on: \"deserialize\",\n  key: \"function\",\n  type: \"string\",\n  value: (key, value) => eval(`(${value})`),\n};\n\nconst type = {\n  serialize: \"serialize\",\n  deserialize: \"deserialize\",\n};\n\nconst serializers = {\n  /**\n   * @type {serializerType[]}\n   */\n  [type.serialize]: [],\n  /**\n   * @type {serializerType[]}\n   */\n  [type.deserialize]: [],\n};\n\n/**\n *\n * @param {serializerType} s\n */\nfunction checkTypes(s) {\n  return (\n    [\"serialize\", \"deserialize\"].includes(s.on) &&\n    ([\"function\", \"string\"].includes(typeof s.key) ||\n      s.key instanceof RexExp) &&\n    ([\"string\", \"number\", \"function\", \"object\"].includes(s.type) ||\n      s.type instanceof RegExp ||\n      typeof s.type === \"function\") &&\n    typeof s.value === \"function\"\n  );\n}\n\n/**\n *\n * @param {serializerType} serializer\n */\nfunction checkRequiredProps(serializer) {\n  const requiredProps = [\"on\", \"key\", \"type\", \"value\"];\n  const missing = requiredProps.filter(key => !serializer[key]);\n  if (missing && missing.length > 0) {\n    throw new Error(\"missing required property: \", missing);\n  }\n}\n\n/**\n *\n * @param {serializerType[]} serializers\n * @returns {serializerType[]}\n */\nfunction validateSerializer(serializers) {\n  const newSerializers = Array.isArray(serializers)\n    ? serializers\n    : [serializers];\n  const enabled = newSerializers.filter(n => n.enabled);\n  enabled.every(e => checkRequiredProps(e));\n\n  if (!enabled.every(e => checkTypes(e))) {\n    throw new Error(\"invalid serializer, check property types\");\n  }\n  return enabled;\n}\n\nconst keyApplies = {\n  /**\n   * @param {serializerType} s\n   * @returns {boolean}\n   */\n  object: (s, k, v) => s.key.test(k),\n  /**\n   * @param {serializerType} s\n   */\n  string: (s, k, v) => s.key === k || s.key === \"*\",\n  /**\n   * @param {serializerType} s\n   * @returns {boolean}\n   */\n  function: (s, k, v) => s.key(k, v),\n};\n\nconst typeApplies = {\n  /**\n   * @param {serializerType} s\n   * @returns {boolean}\n   */\n  object: (s, k, v) => s.type.test(k),\n  /**\n   * @param {serializerType} s\n   */\n  string: (s, k, v) => s.type === typeof v,\n  /**\n   * @param {serializerType} s\n   * @returns {boolean}\n   */\n  function: (s, k, v) => s.type(k, v),\n};\n\n/**\n *\n * @param {serializerType} serializer\n * @param {*} key\n * @param {*} value\n * @returns {boolean}\n */\nfunction applies(serializer, key, value) {\n  return (\n    typeApplies[typeof serializer.type](serializer, key, value) &&\n    keyApplies[typeof serializer.key](serializer, key, value)\n  );\n}\n\nfunction findDeserializer(key, value) {\n  return serializers[type.deserialize].find(s => applies(s, key, value));\n}\n\nfunction findSerializer(key, value) {\n  return serializers[type.serialize].find(s => applies(s, key, value));\n}\n\n/**\n * @typedef {{\n *  addSerializer:function(serializerType|serializerType[]):Serializer,\n *  serialize(object):string,\n *  deserialize(string):object\n * }} Serializer Control de/serialization\n */\n\n/**\n * @type {Serializer}\n */\nconst Serializer = {\n  /**\n   *\n   * @param {serializerType | serializerType[]}\n   */\n  addSerializer(s) {\n    if (!s) return null;\n    const newSerializers = validateSerializer(s);\n    newSerializers.forEach(s => serializers[s.on].push(s));\n    return this;\n  },\n\n  serialize(key, value) {\n    const serializer = findSerializer(key, value);\n    if (serializer) {\n      return serializer.value(key, value);\n    }\n    return value;\n  },\n\n  deserialize(key, value) {\n    const deserializer = findDeserializer(key, value);\n    if (deserializer) {\n      return deserializer.value(key, value);\n    }\n    return value;\n  },\n};\n\nexport default Serializer;\n","/**\n * @typedef {import('./event').Event} Event\n * @typedef {import('.').Model} Model\n */\n\n/**\n * @callback eventHandler\n * @param {Event | Model | {eventName:string, Model}} eventData\n * @returns {Promise<void>}\n */\n\n/**\n *\n * @param {Error} error\n */\nconst handleError = error => {\n  console.error({ file: __filename, error });\n};\n\n/**\n * Abstract observer\n */\nexport class Observer {\n  /**\n   *\n   * @param {Map<string | RegExp, eventHandler[]>} eventHandlers\n   */\n  constructor(eventHandlers) {\n    this.handlers = eventHandlers;\n  }\n\n  /**\n   * Register callback `handler` to fire on event `eventName`\n   * @param {String | RegExp} eventName\n   * @param {eventHandler} handler\n   * @param {boolean} [allowMultiple] - true by default; if false, event can be handled by only one callback\n   */\n  on(eventName, handler, allowMultiple = true) {\n    throw new Error(\"unimplemented abstract method\");\n  }\n\n  /**\n   * Fire event `eventName` and pass `eventData` to listeners.\n   * @param {String} eventName\n   * @param {Event} eventData\n   */\n  async notify(eventName, eventData) {\n    throw new Error(\"unimplemented abstract method\");\n  }\n}\n\n/**\n * @type {Observer}\n * @extends Observer\n */\nclass ObserverImpl extends Observer {\n  /**\n   * @override\n   */\n  constructor(eventHandlers) {\n    super(eventHandlers);\n  }\n\n  /**\n   * @override\n   * @param {string | RegExp} eventName\n   * @param {eventHandler} handler\n   * @param {boolean} [allowMultiple]\n   */\n  on(eventName, handler, allowMultiple = true) {\n    if (!eventName || typeof handler !== \"function\") {\n      throw new Error(\"eventName or handler invalid\");\n    }\n\n    if (this.handlers.has(eventName)) {\n      if (allowMultiple) {\n        this.handlers.get(eventName).push(handler);\n      }\n    } else {\n      this.handlers.set(eventName, [handler]);\n    }\n  }\n\n  /**\n   * @override\n   */\n  async notify(eventName, eventData) {\n    try {\n      if (this.handlers.has(eventName)) {\n        await Promise.allSettled(\n          this.handlers.get(eventName).map(handler => handler(eventData))\n        );\n      }\n\n      await Promise.allSettled(\n        [...this.handlers]\n          .filter(([k, v]) => k instanceof RegExp && k.test(eventName))\n          .map(([k, v]) => v.map(f => f(eventData)))\n      );\n    } catch (error) {\n      handleError(error);\n    }\n  }\n}\n\n/**\n * @todo handle all state same way\n */\nconst ObserverFactory = (() => {\n  let instance;\n\n  function createInstance() {\n    return new ObserverImpl(new Map());\n  }\n\n  return Object.freeze({\n    /**\n     * @returns {Observer} singleton\n     */\n    getInstance: function () {\n      if (!instance) {\n        instance = createInstance();\n      }\n      return instance;\n    },\n  });\n})();\n\nexport default ObserverFactory;\n","\"use strict\";\n\nimport {\n  postModels,\n  patchModels,\n  getModels,\n  getModelsById,\n  deleteModels,\n  initCache,\n  getConfig,\n} from \"./controllers\";\n\nimport { Persistence } from \"./services/persistence-service\";\nimport { save, find, close } from \"./adapters/persistence-adapter\";\nimport http from \"./adapters/http-adapter\";\nimport ModelFactory from \"./models\";\n\nconst apiRoot = process.env.API_ROOT || \"/microlib/api\";\nconst modelPath = `${apiRoot}/models`;\n\nconst idRoute = route =>\n  route.split(\"/\").splice(0, 5).concat([\":id\"]).join(\"/\");\n\nconst cmdRoute = route =>\n  route.split(\"/\").splice(0, 6).concat([\":id\", \":command\"]).join(\"/\");\n\nclass RouteMap extends Map {\n  has(route) {\n    if (!route) {\n      console.warn(\"route is \", typeof route);\n      return false;\n    }\n\n    if (super.has(route)) {\n      this.route = super.get(route);\n      return true;\n    }\n\n    const idInstance = idRoute(route);\n    if (route.match(/\\//g).length === 5 && super.has(idInstance)) {\n      this.route = super.get(idInstance);\n      return true;\n    }\n\n    const cmdInstance = cmdRoute(route);\n    if (route.match(/\\//g).length === 6 && super.has(cmdInstance)) {\n      this.route = super.get(cmdInstance);\n      return true;\n    }\n    return false;\n  }\n\n  get(route) {\n    return this.route ? this.route : super.get(route);\n  }\n}\n\nfunction isServerless() {\n  return (\n    /serverless/i.test(process.title) || /true/i.test(process.env.SERVERLESS)\n  );\n}\n\nconst Server = (() => {\n  const routes = new RouteMap();\n  const serverless = isServerless();\n  const serverMode = serverless ? \"serverless\" : \"webserver\";\n\n  const endpoint = e => `${modelPath}/${e}`;\n  const endpointId = e => `${modelPath}/${e}/:id`;\n  const endpointCmd = e => `${modelPath}/${e}/:id/:command`;\n\n  const remoteEntry = __non_webpack_require__(\"./remoteEntry\");\n\n  const getRemoteModules = remoteEntry.microlib\n    .get(\"./models\")\n    .then(factory => {\n      const Module = factory();\n      return Module.initRemotes;\n    });\n\n  const getRemoteEntries = remoteEntry.microlib\n    .get(\"./remoteEntries\")\n    .then(factory => factory());\n\n  function makeAdmin(app, adapter) {\n    app.get(`${apiRoot}/config`, adapter(getConfig()));\n    routes.set(`${apiRoot}/config`, { get: adapter(getConfig()) });\n  }\n\n  const make = {\n    /**\n     * webServer mode - create routes and register controllers\n     * @param {*} path\n     * @param {*} app\n     * @param {*} method\n     * @param {*} controllers\n     */\n    webserver(path, method, controllers, app) {\n      controllers().forEach(ctlr => {\n        console.info(ctlr);\n        app[method](path(ctlr.endpoint), http(ctlr.fn));\n      });\n    },\n\n    /**\n     * serverless mode - save routes, etc for fast lookup\n     * @param {*} path\n     * @param {*} method\n     * @param {*} controllers\n     */\n    serverless(path, method, controllers) {\n      controllers().forEach(ctlr => {\n        const route = path(ctlr.endpoint);\n        if (routes.has(route)) {\n          routes.set(route, {\n            ...routes.get(route),\n            [method]: http(ctlr.fn),\n          });\n          return;\n        }\n        routes.set(route, { [method]: http(ctlr.fn) });\n      });\n    },\n  };\n\n  /**\n   * Call controllers directly in serverless mode.\n   */\n  async function control(path, method, req, res) {\n    if (routes.has(path)) {\n      try {\n        console.debug(\"path match: \", path);\n        const fn = routes.get(path)[method];\n        if (fn) {\n          console.debug(\"method match:\", method);\n          return await fn(req, res);\n        }\n        console.warn(\"method not supported\", path, method);\n      } catch (error) {\n        console.error(\"problem running controller\", error);\n      }\n    }\n    console.warn(\"potential config issue\", path, method);\n  }\n\n  function shutdown(shutdownTasks) {\n    console.warn(\"Received SIGTERM - system shutdown in progress\");\n    shutdownTasks();\n  }\n\n  /**\n   * Clear all non-webpack module cache, i.e.\n   * everything bundled by remoteEntry.js (models\n   * & remoteEntry config), which includes all the\n   * user code downloaded from the remote. This is\n   * the code that needs to be disposed of & reimported.\n   */\n  function clear() {\n    try {\n      close();\n      routes.clear();\n      ModelFactory.clearModels();\n\n      Object.keys(__non_webpack_require__.cache).forEach(k => {\n        console.log(\"deleting cached module\", k);\n        delete __non_webpack_require__.cache[k];\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function start(router) {\n    const label = \"\\ntotal time to import & register remote modules\";\n    console.time(label);\n    const overrides = { save, find, Persistence };\n\n    return getRemoteEntries.then(remotes => {\n      return getRemoteModules.then(initRemotes => {\n        return initRemotes(remotes, overrides).then(async () => {\n          const cache = initCache();\n\n          console.info(`running in ${serverMode} mode`);\n\n          make[serverMode](endpoint, \"get\", getModels, router);\n          make[serverMode](endpoint, \"post\", postModels, router);\n          make[serverMode](endpointId, \"get\", getModelsById, router);\n          make[serverMode](endpointId, \"patch\", patchModels, router);\n          make[serverMode](endpointId, \"delete\", deleteModels, router);\n          make[serverMode](endpointCmd, \"patch\", patchModels, router);\n\n          makeAdmin(router, http);\n          console.timeEnd(label);\n          console.info(routes);\n\n          await cache.load();\n          process.on(\"sigterm\", () => shutdown(() => close()));\n          return control;\n        });\n      });\n    });\n  }\n\n  return {\n    clear,\n    start,\n    control,\n  };\n})();\n\nexport default Server;\n","let service;\n\nconst EventBus = {\n  async listen(...args) {\n    if (!service) {\n      service = (await import(\"microservices/event-bus\")).EventBus;\n    }\n    console.debug(\"calling service.listen()\", args);\n    return service.listen(...args);\n  },\n  async notify(...args) {\n    if (!service) {\n      service = (await import(\"microservices/event-bus\")).EventBus;\n    }\n    return service.notify(...args);\n  },\n};\n\nexport default EventBus;\n","\"use strict\";\n\nimport DataSource from \"../datasources\";\n\nexport const Persistence = {\n  async save(model) {\n    return DataSource.getDataSource(model.getName()).save(model.getId(), model);\n  },\n\n  async find(model) {\n    return DataSource.getDataSource(model.getName()).find(model.getId());\n  },\n\n  close() {\n    DataSource.getFactory().close();\n  },\n};\n","export default async (event, observer) => {\n  try {\n    const publishEvent = (await import(\"microservices/services\")).publishEvent;\n    publishEvent(event, observer);\n  } catch (error) {\n    console.error(error);\n  }\n};\n","\"use strict\";\n\nimport domainEvents from \"../models/domain-events\";\n\n/**\n * @typedef {Object} dependencies injected dependencies\n * @property {String} modelName - name of the domain model\n * @property {import('../models/model-factory').ModelFactory} models - model factory\n * @property {import('../datasources/datasource').default} repository - persistence service\n * @property {import('../models/observer').Observer} observer - application events, propagated to domain\n * @property {...Function} handlers - event handlers can be registered by the domain\n */\n\n/**\n * @typedef {function(ModelParam):Promise<import(\"../models\").Model>} addModel\n * @param {dependencies} param0\n * @returns {function():Promise<import('../models').Model>}\n */\nexport default function makeAddModel({\n  modelName,\n  models,\n  repository,\n  observer,\n  handlers = [],\n} = {}) {\n  const eventType = models.EventTypes.CREATE;\n  const eventName = models.getEventName(eventType, modelName);\n  handlers.forEach(handler => observer.on(eventName, handler));\n\n  // Add an event whose callback invokes this factory.\n  observer.on(domainEvents.addModel(eventName), addModel, false);\n  async function addModel(input) {\n    const model = await models.createModel(\n      observer,\n      repository,\n      modelName,\n      input\n    );\n    const event = await models.createEvent(eventType, modelName, model);\n\n    try {\n      await repository.save(model.getId(), model);\n      await observer.notify(event.eventName, event);\n    } catch (error) {\n      await repository.delete(model.getId());\n      throw new Error(error);\n    }\n\n    // Return the latest changes\n    return repository.find(model.getId());\n  }\n\n  return addModel;\n}\n","\"use strict\";\n\nimport executeCommand from \"./execute-command\";\nimport invokePort from \"./invoke-port\";\nimport async from \"../lib/async-error\";\nimport domainEvents from \"../models/domain-events\";\n\n/**\n * @typedef {Object} ModelParam\n * @property {String} modelName\n * @property {import('../models/model-factory').ModelFactory} models\n * @property {import('../datasources/datasource').default} repository\n * @property {import('../models/observer').Observer} observer\n * @property {Function[]} handlers\n */\n\n/**\n * @typedef {function(ModelParam):Promise<import(\"../models\").Model>} editModel\n * @param {ModelParam} param0\n * @returns {function():Promise<import(\"../models/model\").Model>}\n */\nexport default function makeEditModel({\n  modelName,\n  models,\n  repository,\n  observer,\n  handlers = [],\n} = {}) {\n  const eventType = models.EventTypes.UPDATE;\n  const eventName = models.getEventName(eventType, modelName);\n  handlers.forEach(handler => observer.on(eventName, handler));\n\n  // Add an event that can be used to edit this model\n  observer.on(domainEvents.editModel(eventName), editModelHandler);\n\n  async function editModel(id, changes, command) {\n    const model = await repository.find(id);\n\n    if (!model) {\n      throw new Error(\"no such id\");\n    }\n\n    const updated = models.updateModel(model, changes);\n    const event = await models.createEvent(eventType, modelName, {\n      updated,\n      changes,\n    });\n\n    try {\n      await repository.save(id, updated);\n      await observer.notify(event.eventName, event);\n    } catch (error) {\n      await repository.save(id, model);\n      throw new Error(error);\n    }\n\n    if (command) {\n      const result = await async(executeCommand(updated, command, \"write\"));\n      if (result.ok) {\n        return result.data;\n      }\n    }\n\n    if (command) {\n      const result = await async(invokePort(updated, command, \"write\"));\n      if (result.ok) {\n        return result.data;\n      }\n    }\n\n    return updated;\n  }\n\n  async function editModelHandler(event) {\n    return editModel(event.id, event.changes, event.command);\n  }\n\n  return editModel;\n}\n","\"use strict\";\n\nimport checkAcl from \"../lib/check-acl\";\nimport async from \"../lib/async-error\";\nimport domainEvents from \"../models/domain-events\";\n\nconst commandType = {\n  /**\n   *\n   * @param {function(import(\"../models/model\").Model)} command\n   * @param {import(\"../models/model\").Model} model\n   */\n  function: async (command, model) => command(model),\n  /**\n   *\n   * @param {string} command\n   * @param {import(\"../models/model\").Model} model\n   */\n  string: async (command, model) => model[command](),\n};\n\nfunction commandAuthorized(spec, command, permission) {\n  return (\n    command &&\n    spec.commands &&\n    spec.commands[command] &&\n    checkAcl(spec.commands[command].acl, permission)\n  );\n}\n\n/**\n *\n * @param {import(\"../models/model\").Model} model\n * @param {command:string} command - name of command\n * @param {string} permission - permission of caller\n */\nexport default async function executeCommand(model, command, permission) {\n  const spec = model.getSpec();\n\n  if (commandAuthorized(spec, command, permission)) {\n    const cmd = spec.commands[command].command;\n\n    if (typeof cmd === \"function\" || model[cmd]) {\n      const result = await async(commandType[typeof cmd](cmd, model));\n\n      if (result.ok) {\n        return { ...model, ...result.data };\n      }\n    }\n    console.warn(\"command not found\", command);\n  }\n  model.emit(domainEvents.unauthorizedCommand(model), command);\n\n  return model;\n}\n","\"use strict\";\n\nimport async from \"../lib/async-error\";\n\n/**\n * @param {import(\"../models/model\").Model} model\n * @param {import(\"../models\".relations)} relation\n */\nexport default async function fetchRelatedModels(model, relation) {\n  const spec = model.getSpec();\n\n  if (relation && spec.relations && spec.relations[relation]) {\n    const result = await async(model[relation]());\n\n    if (result.ok) {\n      return { [model.getName()]: model, [relation]: result.data };\n    }\n  }\n\n  return model;\n}\n","\"use strict\";\n\nimport executeCommand from \"./execute-command\";\nimport fetchRelatedModels from \"./fetch-related-models\";\n\n/**\n * @typedef {Object} ModelParam\n * @property {String} modelName\n * @property {import('../datasources/datasource').default} repository\n * @property {import('../models/observer').Observer} observer\n * @property {import('../models/index').ModelFactory} models\n * @property {...Function} handlers\n */\n\n/**\n * @callback findModel\n * @param {string} id\n * @param {{key1:string,keyN:string}} query\n * @returns {Promise<import(\"../models/model\").Model>}\n *\n * @param {ModelParam} param0\n * @returns {findModel}\n */\nexport default function makeFindModel({ repository } = {}) {\n  return async function findModel(id, query) {\n    const model = await repository.find(id);\n\n    if (!model) {\n      throw new Error(\"no such id\");\n    }\n\n    if (query?.relation) {\n      const related = await fetchRelatedModels(model, query.relation);\n      if (related) {\n        return related;\n      }\n    }\n\n    if (query?.command) {\n      const result = await executeCommand(model, query.command, \"read\");\n      if (result) {\n        return result;\n      }\n    }\n\n    return model;\n  };\n}\n","import ModelFactory, { initRemoteCache } from \"../models\";\nimport publishEvent from \"../services/publish-event\";\nimport EventBus from \"../services/event-bus\";\n\nconst BROADCAST = process.env.TOPIC_BROADCAST || \"broadcastChannel\";\nconst UPDATE = ModelFactory.EventTypes.UPDATE;\nconst CREATE = ModelFactory.EventTypes.CREATE;\nconst DELETE = ModelFactory.EventTypes.DELETE;\n\n/**\n *\n * @param {*} param0\n * @returns\n */\nexport function updateCache({ datasource, observer }) {\n  return async function ({ message }) {\n    const event = JSON.parse(message);\n\n    console.log(\"updateCache called\", event.eventName);\n\n    if (\n      event.eventName.startsWith(CREATE) ||\n      event.eventName.startsWith(UPDATE)\n    ) {\n      console.debug(\"check if we have the code for this object...\");\n      if (!ModelFactory.getModelSpec(event.modelName)) {\n        console.debug(\"we don't, import it...\");\n        // Stream the code for the model\n        await initRemoteCache(event.modelName);\n      }\n\n      console.debug(\"unmarshal the deserialized model\");\n      const model = ModelFactory.loadModel(\n        observer,\n        datasource,\n        event.model,\n        event.modelName\n      );\n      return datasource.save(model.getId(), model);\n    }\n\n    if (event.eventName.startsWith(DELETE)) {\n      return datasource.delete(event.modelId);\n    }\n  };\n}\n\n/**\n * Implement distributed object cache. Find any model\n * referenced by a relation that is not registered in\n * the model factory and listen for remote CRUD events\n * from it. On receipt of the event, import the remote\n * modules for the model and its adapters/services, if\n * they haven't been already, then rehydrate and load\n * the model into the cache.\n */\nexport const cacheEventHandler = function ({ observer, getDataSource }) {\n  return {\n    notify() {\n      observer.on(/CREATE|UPDATE|DELETE/, async event =>\n        EventBus.notify(BROADCAST, JSON.stringify(event))\n      );\n    },\n    listen() {\n      const models = ModelFactory.getModelSpecs();\n      const relations = models.map(m => ({ ...m.relations }));\n      const unregistered = relations.filter(\n        r => !models.find(m => m.modelName === r.modelName)\n      );\n      unregistered.forEach(function (u) {\n        Object.keys(u).forEach(k => {\n          console.debug(\"modelName\", u[k].modelName);\n          if (!u[k] || !u[k].modelName) return;\n          const datasource = getDataSource(u[k].modelName);\n          console.debug(\"calling listen\", u[k]);\n\n          EventBus.listen({\n            topic: BROADCAST,\n            id: new Date().getTime() + \"create\",\n            callback: updateCache({ observer, datasource }),\n            once: false,\n            filters: [CREATE.concat(u[k].modelName).toUpperCase()],\n          });\n          EventBus.listen({\n            topic: BROADCAST,\n            id: new Date().getTime() + \"update\",\n            callback: updateCache({ observer, datasource }),\n            once: false,\n            filters: [UPDATE.concat(u[k].modelName).toUpperCase()],\n          });\n          EventBus.listen({\n            topic: BROADCAST,\n            id: new Date().getTime() + \"delete\",\n            callback: updateCache({ observer, datasource }),\n            once: false,\n            filters: [DELETE.concat(u[k].modelName).toUpperCase()],\n          });\n        });\n      });\n    },\n  };\n};\n\n/**\n *\n * @param {import('../models/observer').Observer} observer\n * @param {import('../adapters/event-adapter').EventService} eventService\n */\nexport default function handleEvents(observer, getDataSource) {\n  //observer.on(/.*/, async event => publishEvent(event));\n\n  // Distributed object cache - must be explicitly enabled\n  if (/true/i.test(process.env.DISTRIBUTED_CACHE_ENABLED)) {\n    const cache = cacheEventHandler({ observer, getDataSource });\n    cache.listen();\n    cache.notify();\n  }\n\n  /**\n   * This is the cluster cache sync listener - when data is\n   * saved in another process, the master forwards the data to\n   * all the other workers, so they can update their cache.\n   */\n  process.on(\"message\", ({ cmd, id, pid, data, name }) => {\n    if (cmd && id && data && process.pid !== pid) {\n      if (cmd === \"saveCommand\") {\n        const ds = getDataSource(name);\n        ds.clusterSave(id, data);\n        return;\n      }\n\n      if (cmd === \"deleteCommand\") {\n        const ds = getDataSource(name);\n        ds.clusterDelete(id);\n        return;\n      }\n    }\n  });\n}\n","\"use strict\";\n\nimport makeAddModel from \"./add-model\";\nimport makeEditModel from \"./edit-model\";\nimport makeListModels from \"./list-models\";\nimport makeFindModel from \"./find-model\";\nimport makeRemoveModel from \"./remove-model\";\nimport makeLoadModels from \"./load-models\";\nimport makeListConfig from \"./list-configs\";\nimport DataSourceFactory from \"../datasources\";\nimport ObserverFactory from \"../models/observer\";\nimport ModelFactory from \"../models\";\nimport handleEvents from \"./handle-events\";\n\nexport function registerCacheEvents() {\n  handleEvents(ObserverFactory.getInstance(), name =>\n    DataSourceFactory.getDataSource(name, true)\n  );\n}\n\n/**\n *\n * @param {import('../models').ModelSpecification} model\n */\nfunction buildOptions(model) {\n  return {\n    modelName: model.modelName,\n    models: ModelFactory,\n    observer: ObserverFactory.getInstance(),\n    handlers: model.eventHandlers,\n    repository: DataSourceFactory.getDataSource(model.modelName),\n  };\n}\n\nfunction make(factory) {\n  const models = ModelFactory.getRemoteModels();\n  return models.map(model => ({\n    endpoint: model.endpoint,\n    fn: factory(buildOptions(model)),\n  }));\n}\n\nexport const addModels = () => make(makeAddModel);\nexport const editModels = () => make(makeEditModel);\nexport const listModels = () => make(makeListModels);\nexport const findModels = () => make(makeFindModel);\nexport const removeModels = () => make(makeRemoveModel);\nexport const loadModels = () => make(makeLoadModels);\nexport const listConfigs = () => makeListConfig({ models: ModelFactory });\n","\"use strict\";\n\nimport async from \"../lib/async-error\";\nimport checkAcl from \"../lib/check-acl\";\n\nfunction portAuthorized(spec, port, permission) {\n  return (\n    port && spec.ports && spec.ports[port] && checkAcl(\"write\", permission)\n  );\n}\n/**\n *\n * @param {import(\"../models/model-factory\").ModelFactory} models\n * @param {import(\"../models/model\").Model} model\n * @param {{port:string}} query\n */\nexport default async function invokePort(model, port, permission) {\n  const spec = model.getSpec();\n\n  if (portAuthorized(spec, port, permission)) {\n    const callback = spec.ports[port].callback;\n\n    if (callback) {\n      const result = await async(model[port](callback));\n      if (result.ok) {\n        return { ...model, ...result.data };\n      }\n    }\n\n    const result = await async(model[port]());\n    if (result.ok) {\n      return { ...model, ...result.data };\n    }\n  }\n  return model;\n}\n","\"use strict\";\n\nexport default function listConfigsFactory({ models } = {}) {\n  return async function listConfigs() {\n    return models.getRemoteModels();\n  };\n}\n","\"use strict\";\n\nconst DateFunctions = {\n  today: list =>\n    list.filter(m => new Date(m.createTime).getDate() === new Date().getDate())\n      .length,\n  yesterday: list =>\n    list.filter(\n      m => new Date(m.createTime).getDate() === new Date().getDate() - 1\n    ).length,\n  thisMonth: list =>\n    list.filter(\n      m => new Date(m.createTime).getMonth() === new Date().getMonth()\n    ).length,\n  lastMonth: list =>\n    list.filter(\n      m => new Date(m.createTime).getMonth() === new Date().getMonth() - 1\n    ).length,\n};\n\n/**\n *\n * @param {*} query\n * @param {import(\"../datasources/datasource\").default} repository\n * @returns\n */\nasync function parseQuery(query, repository) {\n  if (query?.count) {\n    if (typeof query.count === \"number\") {\n      return repository.list(query);\n    }\n    const dateFunc = DateFunctions[query.count];\n\n    if (dateFunc) {\n      const list = await repository.list();\n      return {\n        count: dateFunc(list),\n      };\n    }\n\n    const searchTerms = query.count.split(\":\");\n\n    if (searchTerms.length > 1) {\n      const filter = { [searchTerms[0]]: searchTerms[1] };\n      const filteredList = await repository.list(filter);\n\n      return {\n        ...filter,\n        count: filteredList.length,\n      };\n    }\n\n    return {\n      total: (await repository.list(null, false)).length,\n      cached: repository.getCacheSize(),\n      bytes: repository.getCacheSizeBytes(),\n    };\n  }\n  return repository.list(query);\n}\n\n/**\n * @callback listModels\n * @param {{key1:string, keyN:string}} query\n * @returns {Promise<Array<import(\"../models/model\").Model)>>}\n *\n * @param {{repository:import('../datasources/datasource').default}}\n * @returns {listModels}\n */\nexport default function makeListModels({ repository } = {}) {\n  return async function listModels(query) {\n    return parseQuery(query, repository);\n  };\n}\n","\"use strict\";\n\nimport Serializer from \"../lib/serializer\";\nimport resumeWorkflow from \"./resume-workflow\";\n\n/**\n * @param {function(import(\"../models\").Model)} loadModel\n * @param {import(\"../models/observer\").Observer} observer\n * @param {import(\"../datasources/datasource\").default} repository\n * @returns {function(Map<string,Model>|Model)}\n */\nfunction hydrateModels(loadModel, observer, repository) {\n  return function (saved) {\n    if (!saved) return;\n\n    if (saved instanceof Map) {\n      return new Map(\n        [...saved].map(function ([k, v]) {\n          const model = loadModel(observer, repository, v, v.modelName);\n          return [k, model];\n        })\n      );\n    }\n\n    if (Object.getOwnPropertyNames(saved).includes(\"modelName\")) {\n      return loadModel(observer, repository, saved, saved.modelName);\n    }\n  };\n}\n\nfunction handleError(e) {\n  console.error(e);\n}\n/**\n *\n * @param {import(\"../datasources/datasource\").default} repository\n */\nfunction handleRestart(repository) {\n  // console.log(\"resuming workflow\", repository.name);\n  repository.list().then(resumeWorkflow).catch(handleError);\n}\n\n/**\n * Factory returns function to unmarshal deserialized models\n * @typedef {import('../models').Model} Model\n * @param {{\n *  models:import('../models/model-factory').ModelFactory,\n *  observer:import('../models/observer').Observer,\n *  repository:import('../datasources/datasource').default,\n *  modelName:string\n * }} options\n */\nexport default function ({ models, observer, repository, modelName }) {\n  return async function loadModels() {\n    const spec = models.getModelSpec(modelName);\n\n    setTimeout(handleRestart, 30000, repository);\n\n    return repository.load({\n      hydrate: hydrateModels(models.loadModel, observer, repository),\n      serializer: Serializer.addSerializer(spec.serializers),\n    });\n  };\n}\n","\"use strict\";\n\n/**\n * @typedef {Object} ModelParam\n * @property {String} modelName\n * @property {import('../models').ModelFactory} models\n * @property {import('../datasources/datasource').default} repository\n * @property {import('../models/observer').Observer} observer\n * @property {...Function} handlers\n */\n\n/**\n * @callback removeModel\n * @param {string} id\n * @returns {Promise<import(\"../models\").Model>}\n */\n\n/**\n * @param {ModelParam} param0\n * @returns {removeModel}\n */\nexport default function removeModelFactory({\n  modelName,\n  models,\n  repository,\n  observer,\n  handlers = [],\n} = {}) {\n  const eventType = models.EventTypes.DELETE;\n  const eventName = models.getEventName(eventType, modelName);\n  handlers.forEach(handler => observer.on(eventName, handler));\n\n  return async function removeModel(id) {\n    const model = await repository.find(id);\n\n    if (!model) {\n      throw new Error(\"no such id\");\n    }\n\n    const deleted = models.deleteModel(model);\n    const event = await models.createEvent(eventType, modelName, deleted);\n\n    const [obsResult, repoResult] = await Promise.allSettled([\n      observer.notify(event.eventName, event),\n      repository.delete(id),\n    ]);\n\n    if (obsResult.status === \"rejected\") {\n      if (repoResult.status === \"fulfilled\") {\n        await repository.save(id, model);\n      }\n      throw new Error(\"model not deleted\", obsResult.reason);\n    }\n\n    return model;\n  };\n}\n","\"use strict\";\n\nimport async from \"../lib/async-error\";\n\n/**\n * Check `portFlow` history and resume any workflow\n * that was running before we shut down.\n *\n * @param {function(Model):string[]} getPortFlow history of port calls\n * @param {import(\"../models\").ports} ports\n * @returns {function(Map<string,Model>)}\n */\nexport default async function resumeWorkflow(list) {\n  if (list?.length > 0) {\n    await Promise.all(\n      list.map(async function (model) {\n        const history = model.getPortFlow();\n        const ports = model.getSpec().ports;\n\n        if (history?.length > 0 && !model.compensate) {\n          const lastPort = history.length - 1;\n          const nextPort = ports[history[lastPort]].producesEvent;\n\n          if (nextPort && nextPort !== \"workflowComplete\") {\n            await async(model.emit(nextPort, resumeWorkflow.name));\n          }\n        }\n      })\n    ).catch(error => console.error(error));\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/mongodb/lib/core/connection sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/mongodb/lib/core sync recursive\";\nmodule.exports = webpackEmptyContext;"],"sourceRoot":""}